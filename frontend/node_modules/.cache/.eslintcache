[{"C:\\D_Drive\\KULIAH\\Pengembangan Web\\Coba Portofolio\\webdev-m2\\frontend\\src\\index.js":"1","C:\\D_Drive\\KULIAH\\Pengembangan Web\\Coba Portofolio\\webdev-m2\\frontend\\src\\App.js":"2","C:\\D_Drive\\KULIAH\\Pengembangan Web\\Coba Portofolio\\webdev-m2\\frontend\\src\\components\\Login.js":"3","C:\\D_Drive\\KULIAH\\Pengembangan Web\\Coba Portofolio\\webdev-m2\\frontend\\src\\components\\Register.js":"4","C:\\D_Drive\\KULIAH\\Pengembangan Web\\Coba Portofolio\\webdev-m2\\frontend\\src\\components\\Navbar.js":"5","C:\\D_Drive\\KULIAH\\Pengembangan Web\\Coba Portofolio\\webdev-m2\\frontend\\src\\components\\Dashboard.js":"6","C:\\D_Drive\\KULIAH\\Pengembangan Web\\Coba Portofolio\\webdev-m2\\frontend\\src\\components\\datadiri\\Datadiri.js":"7","C:\\D_Drive\\KULIAH\\Pengembangan Web\\Coba Portofolio\\webdev-m2\\frontend\\src\\components\\datadiri\\AddDatadiri.js":"8","C:\\D_Drive\\KULIAH\\Pengembangan Web\\Coba Portofolio\\webdev-m2\\frontend\\src\\components\\datadiri\\EditDatadiri.js":"9"},{"size":336,"mtime":1695738628026,"results":"10","hashOfConfig":"11"},{"size":1129,"mtime":1696307618448,"results":"12","hashOfConfig":"11"},{"size":2383,"mtime":1695738628024,"results":"13","hashOfConfig":"11"},{"size":3548,"mtime":1695738628025,"results":"14","hashOfConfig":"11"},{"size":1794,"mtime":1695738628025,"results":"15","hashOfConfig":"11"},{"size":2641,"mtime":1696298210718,"results":"16","hashOfConfig":"11"},{"size":2336,"mtime":1696307580783,"results":"17","hashOfConfig":"11"},{"size":6435,"mtime":1696307128652,"results":"18","hashOfConfig":"11"},{"size":7181,"mtime":1696307133156,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"a5yc29",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"23"},"C:\\D_Drive\\KULIAH\\Pengembangan Web\\Coba Portofolio\\webdev-m2\\frontend\\src\\index.js",[],[],["50"],"C:\\D_Drive\\KULIAH\\Pengembangan Web\\Coba Portofolio\\webdev-m2\\frontend\\src\\App.js",[],[],"C:\\D_Drive\\KULIAH\\Pengembangan Web\\Coba Portofolio\\webdev-m2\\frontend\\src\\components\\Login.js",[],[],"C:\\D_Drive\\KULIAH\\Pengembangan Web\\Coba Portofolio\\webdev-m2\\frontend\\src\\components\\Register.js",[],[],"C:\\D_Drive\\KULIAH\\Pengembangan Web\\Coba Portofolio\\webdev-m2\\frontend\\src\\components\\Navbar.js",[],[],"C:\\D_Drive\\KULIAH\\Pengembangan Web\\Coba Portofolio\\webdev-m2\\frontend\\src\\components\\Dashboard.js",["51"],[],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport jwt_decode from \"jwt-decode\"\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\nconst Dashboard = () => {\r\n  const [username, setUsername] = useState('')\r\n  const [token, setToken] = useState('')\r\n  const [expire, setExpire] = useState('')\r\n  const [account, setAccount] = useState([])\r\n  const history = useHistory()\r\n  \r\n  useEffect(() => {\r\n    refreshToken();\r\n    getAccount();\r\n  }, []);\r\n\r\n  const refreshToken = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/admin/token\");\r\n      setToken(response.data.accessToken);\r\n      const decoded = jwt_decode(response.data.accessToken);\r\n      setUsername(decoded.username);\r\n      const currentTime = Math.floor(Date.now() / 1000);\r\n      if (decoded.exp < currentTime) {\r\n      }\r\n\r\n      setExpire(decoded.exp);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  const axiosJwt = axios.create()\r\n\r\n  axiosJwt.interceptors.request.use(\r\n    async (config) => {\r\n      const currentDate = new Date();\r\n      if (expire * 1000 < currentDate.getTime()) {\r\n        const response = await axios.get(\"http://localhost:5000/admin/token\");\r\n        config.headers.Authorization = `Bearer ${response.data.accessToken}`;\r\n        setToken(response.data.accessToken);\r\n        const decoded = jwt_decode(response.data.accessToken);\r\n        setUsername(decoded.username);\r\n        setExpire(decoded.exp);\r\n      }\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  const getAccount = async() =>{\r\n    const response = await axiosJwt.get('http://localhost:5000/admin',{\r\n        headers:{\r\n           Authorization: `Bearer ${token}` \r\n        }\r\n    })\r\n    setAccount(response.data)\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"title\">Welcome Back: {username}</h1>\r\n      <button onClick={getAccount} className=\"button is-info \">\r\n        Get User\r\n      </button>\r\n      <table className=\"table is-striped is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>No</th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {account.map((account, index) => (\r\n            <tr key={account.id}>\r\n              <td>{index + 1}</td>\r\n              <td>{account.username}</td>\r\n              <td>{account.email}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard","C:\\D_Drive\\KULIAH\\Pengembangan Web\\Coba Portofolio\\webdev-m2\\frontend\\src\\components\\datadiri\\Datadiri.js",[],[],"C:\\D_Drive\\KULIAH\\Pengembangan Web\\Coba Portofolio\\webdev-m2\\frontend\\src\\components\\datadiri\\AddDatadiri.js",[],[],"C:\\D_Drive\\KULIAH\\Pengembangan Web\\Coba Portofolio\\webdev-m2\\frontend\\src\\components\\datadiri\\EditDatadiri.js",["52"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nconst UpdateDatadiri = () => {\r\n  const [nama, setNama] = useState(\"\");\r\n  const [tempat_lahir, setTempatLahir] = useState(\"\");\r\n  const [tanggal_lahir, setTanggalLahir] = useState(\"\");\r\n  const [alamat, setAlamat] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [no_telp, setNoTelp] = useState(\"\");\r\n  const [foto, setFoto] = useState(\"\");\r\n  const [deskripsi, setDeskripsi] = useState(\"\");\r\n  const [linkedin, setLinkedin] = useState(\"\");\r\n  const [instagram, setInstagram] = useState(\"\");\r\n  const [x, setX] = useState(\"\");\r\n  const [github, setGithub] = useState(\"\");\r\n  const history = useHistory();\r\n  const {id} = useParams();\r\n  \r\n  useEffect(() => {\r\n    getDatadiriById();\r\n  }, []);\r\n\r\n  const updateDatadiri = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.patch(`http://localhost:5000/data_diri/${id}`, {\r\n        nama,\r\n        tempat_lahir,\r\n        tanggal_lahir,\r\n        alamat,\r\n        email,\r\n        no_telp,\r\n        foto,\r\n        deskripsi,\r\n        linkedin,\r\n        instagram,\r\n        x,\r\n        github,\r\n      });\r\n      history.push(\"/data-diri\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getDatadiriById = async () => {\r\n    const response = await axios.get(`http://localhost:5000/data_diri/${id}`);\r\n    setNama(response.data.nama);\r\n    setTempatLahir(response.data.tempat_lahir);\r\n    setTanggalLahir(response.data.tanggal_lahir);\r\n    setAlamat(response.data.alamat);\r\n    setEmail(response.data.email);\r\n    setNoTelp(response.data.no_telp);\r\n    setFoto(response.data.foto);\r\n    setDeskripsi(response.data.deskripsi);\r\n    setLinkedin(response.data.linkedin);\r\n    setInstagram(response.data.instagram);\r\n    setX(response.data.x);\r\n    setGithub(response.data.github);\r\n  };\r\n\r\n  return (\r\n    <div className=\"columns mt-5 is-centered\">\r\n      <div className=\"column is-half\">\r\n        <form onSubmit={updateDatadiri}>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Nama</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                value={nama}\r\n                onChange={(e) => setNama(e.target.value)}\r\n                placeholder=\"Nama\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Tempat Lahir</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                value={tempat_lahir}\r\n                onChange={(e) => setTempatLahir(e.target.value)}\r\n                placeholder=\"Tempat Lahir\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Tanggal Lahir</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                value={tanggal_lahir}\r\n                onChange={(e) => setTanggalLahir(e.target.value)}\r\n                placeholder=\"Tanggal Lahir\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Alamat</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                value={alamat}\r\n                onChange={(e) => setAlamat(e.target.value)}\r\n                placeholder=\"Alamat\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Email</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"Email\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">No Telepon</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                value={no_telp}\r\n                onChange={(e) => setNoTelp(e.target.value)}\r\n                placeholder=\"No Telepon\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Foto</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                value={foto}\r\n                onChange={(e) => setFoto(e.target.value)}\r\n                placeholder=\"Foto\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Deskripsi</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                value={deskripsi}\r\n                onChange={(e) => setDeskripsi(e.target.value)}\r\n                placeholder=\"Deskripsi\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Linkedin</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                value={linkedin}\r\n                onChange={(e) => setLinkedin(e.target.value)}\r\n                placeholder=\"Linkedin\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Instagram</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                value={instagram}\r\n                onChange={(e) => setInstagram(e.target.value)}\r\n                placeholder=\"Instagram\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">X</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                value={x}\r\n                onChange={(e) => setX(e.target.value)}\r\n                placeholder=\"X\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Github</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                value={github}\r\n                onChange={(e) => setGithub(e.target.value)}\r\n                placeholder=\"Github\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <button type=\"submit\" className=\"button is-success\">\r\n              Update\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateDatadiri;\r\n",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":16,"column":6,"nodeType":"57","endLine":16,"endColumn":8,"suggestions":"58"},{"ruleId":"55","severity":1,"message":"59","line":23,"column":6,"nodeType":"57","endLine":23,"endColumn":8,"suggestions":"60"},"no-new-object",["61"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAccount' and 'refreshToken'. Either include them or remove the dependency array.","ArrayExpression",["62"],"React Hook useEffect has a missing dependency: 'getDatadiriById'. Either include it or remove the dependency array.",["63"],"no-object-constructor",{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},"Update the dependencies array to be: [getAccount, refreshToken]",{"range":"68","text":"69"},"Update the dependencies array to be: [getDatadiriById]",{"range":"70","text":"71"},[499,501],"[getAccount, refreshToken]",[851,853],"[getDatadiriById]"]